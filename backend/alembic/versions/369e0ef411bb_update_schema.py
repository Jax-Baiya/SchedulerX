"""Update schema

Revision ID: 369e0ef411bb
Revises: e53eeecf0a82
Create Date: 2025-05-11 14:26:06.532665

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '369e0ef411bb'
down_revision = 'e53eeecf0a82'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('texts')
    op.drop_table('authors')
    op.drop_table('likes')
    op.drop_table('videos')
    op.drop_table('following')
    op.drop_table('bookmarks')
    op.drop_table('consolidated')
    op.add_column('media', sa.Column('media_type', sa.Enum('VIDEO', 'IMAGE', name='mediatype'), nullable=True))
    op.add_column('media', sa.Column('status', sa.String(), nullable=True))
    op.add_column('media', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('media', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('media', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('media', 'video_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_index(op.f('ix_media_author_id'), 'media', ['author_id'], unique=False)
    op.create_index(op.f('ix_media_id'), 'media', ['id'], unique=False)
    op.create_index(op.f('ix_media_video_id'), 'media', ['video_id'], unique=True)
    op.drop_column('media', 'tags')
    op.add_column('upload_status', sa.Column('media_id', sa.Integer(), nullable=True))
    op.add_column('upload_status', sa.Column('r2_url', sa.String(), nullable=True))
    op.add_column('upload_status', sa.Column('upload_metadata', sa.JSON(), nullable=True))
    op.add_column('upload_status', sa.Column('error_message', sa.String(), nullable=True))
    op.add_column('upload_status', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('upload_status', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_upload_status_id'), 'upload_status', ['id'], unique=False)
    op.drop_constraint('upload_status_video_id_fkey', 'upload_status', type_='foreignkey')
    op.create_foreign_key(None, 'upload_status', 'media', ['media_id'], ['id'])
    op.drop_column('upload_status', 'r2_video_url')
    op.drop_column('upload_status', 'retry_count')
    op.drop_column('upload_status', 'r2_cover_url')
    op.drop_column('upload_status', 'upload_timestamp')
    op.drop_column('upload_status', 'last_error')
    op.drop_column('upload_status', 'video_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('upload_status', sa.Column('video_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('upload_status', sa.Column('last_error', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('upload_status', sa.Column('upload_timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('upload_status', sa.Column('r2_cover_url', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('upload_status', sa.Column('retry_count', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('upload_status', sa.Column('r2_video_url', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'upload_status', type_='foreignkey')
    op.create_foreign_key('upload_status_video_id_fkey', 'upload_status', 'media', ['video_id'], ['video_id'])
    op.drop_index(op.f('ix_upload_status_id'), table_name='upload_status')
    op.drop_column('upload_status', 'updated_at')
    op.drop_column('upload_status', 'created_at')
    op.drop_column('upload_status', 'error_message')
    op.drop_column('upload_status', 'upload_metadata')
    op.drop_column('upload_status', 'r2_url')
    op.drop_column('upload_status', 'media_id')
    op.add_column('media', sa.Column('tags', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_media_video_id'), table_name='media')
    op.drop_index(op.f('ix_media_id'), table_name='media')
    op.drop_index(op.f('ix_media_author_id'), table_name='media')
    op.alter_column('media', 'video_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('media', 'updated_at')
    op.drop_column('media', 'created_at')
    op.drop_column('media', 'id')
    op.drop_column('media', 'status')
    op.drop_column('media', 'media_type')
    op.create_table('consolidated',
    sa.Column('c_videos_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('c_videos_authorid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('c_videos_audioid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('c_authors_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('c_authors_nicknames', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('c_authors_uniqueids', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('c_texts_text_content', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('c_videos_id', name='consolidated_pkey')
    )
    op.create_table('bookmarks',
    sa.Column('bookmarks_officiallist', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('bookmarks_downloaded', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bookmarks_total', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bookmarks_numdisappeared', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bookmarks_lastrun', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('bookmarks_officiallist', name='bookmarks_pkey')
    )
    op.create_table('following',
    sa.Column('following_author_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('following_official', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('following_started', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('following_not_interested', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('following_infolder', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('following_disappeared', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('following_last_run_start', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('following_last_run_finish', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('following_last_run_bottom', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('following_last_run_firstadded', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('following_author_id', name='following_pkey')
    )
    op.create_table('videos',
    sa.Column('videos_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('videos_authorid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('videos_createtime', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('videos_diggcount', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('videos_playcount', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('videos_audioid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('videos_size', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('videos_itemmute', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('videos_id', name='videos_pkey')
    )
    op.create_table('likes',
    sa.Column('likes_schemaversion', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('likes_user', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('likes_likes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('likes_user', name='likes_pkey')
    )
    op.create_table('authors',
    sa.Column('authors_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('authors_uniqueids', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('authors_nicknames', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('authors_followercount', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('authors_heartcount', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('authors_videocount', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('authors_signature', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('authors_privateaccount', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('authors_id', name='authors_pkey')
    )
    op.create_table('texts',
    sa.Column('texts_text_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('texts_text_content', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('texts_text_id', name='texts_pkey')
    )
    # ### end Alembic commands ###
